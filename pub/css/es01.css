/* ES01 Recap, slide specific styling */
/* These items are stolen from embedded-systems.scss. Really
 * everything should be refactored so that is an inclusion
 * to this and I don't have to copy (and sync) styles */
/* Definitions slide is a big bunch of manually-laid out arrows
 * and items that will subsequently be zoomed in on. This is the
 * kind of layout that the positioner script can take care of at
 * the slide level, but not at the object leve. TODO!*/
#definitions {
  font-size: 42px;
  text-shadow: 1px 1px 2px #aa5712; }

#definitions ul {
  font-size: 24px; }

#definitions div#mp {
  position: absolute;
  top: -295px;
  left: 480px; }

#definitions div#d1 {
  position: absolute;
  top: -200px;
  left: 550px;
  width: 50px; }

#definitions div#asic {
  position: absolute;
  top: -100px;
  left: -100px; }

#definitions div#l1 {
  position: absolute;
  top: -85px;
  left: 130px;
  width: 50px; }

#definitions div#ex {
  position: absolute;
  top: -155px;
  left: 225px; }

#definitions div#r1 {
  position: absolute;
  top: -85px;
  left: 430px;
  width: 50px; }

#definitions div#p1 {
  position: absolute;
  top: -125px;
  left: 568px;
  font-family: fontello;
  font-size: 80px; }

#definitions div#r2 {
  position: absolute;
  top: -85px;
  left: 660px;
  width: 50px; }

#definitions div#uc {
  position: absolute;
  top: -100px;
  left: 780px; }

#definitions div#d2 {
  position: absolute;
  top: 20px;
  left: 550px;
  width: 50px; }

#definitions div#soc {
  position: absolute;
  top: 100px;
  left: 560px; }

#definitions div#d3 {
  position: absolute;
  top: 200px;
  left: 550px;
  width: 50px; }

#definitions div#fpga {
  position: absolute;
  top: 290px;
  left: 300px; }

#definitions div#r3 {
  position: absolute;
  top: 300px;
  left: 430px;
  width: 50px; }

#definitions div#p2 {
  position: absolute;
  top: 260px;
  left: 568px;
  font-family: fontello;
  font-size: 80px; }

#definitions div#r4 {
  position: absolute;
  top: 300px;
  left: 660px;
  width: 50px; }

#definitions div#psoc {
  position: absolute;
  top: 250px;
  left: 780px;
  font-size: 32px;
  line-height: 1.1; }

/* - Central #definitions is visible for any sub-definition
 * - All def slides are visible on the def-ov overview stop */
.impress-on-definitions #definitions {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=60);
  opacity: 0.6; }

.impress-on-def-ov #definitions {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
  opacity: 1; }

.impress-on-def-asic #definitions {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=60);
  opacity: 0.6; }

.impress-on-def-ov #def-asic {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
  opacity: 1; }

.impress-on-def-up #definitions {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=60);
  opacity: 0.6; }

.impress-on-def-ov #def-up {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
  opacity: 1; }

.impress-on-def-uc #definitions {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=60);
  opacity: 0.6; }

.impress-on-def-ov #def-uc {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
  opacity: 1; }

.impress-on-def-fpga #definitions {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=60);
  opacity: 0.6; }

.impress-on-def-ov #def-fpga {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
  opacity: 1; }

.impress-on-def-psoc #definitions {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=60);
  opacity: 0.6; }

.impress-on-def-ov #def-psoc {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
  opacity: 1; }

.impress-on-class-comb #logic-classes {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
  opacity: 1; }

/* Intermediate overview slides leave past slides transparent
 * and turn future slides opaque. The only problem is that
 * ImpressJS marks slides as past iff the transition to them
 * has completed, which means that out of order or fast traversals
 * have patchy results */
#over1 {
  display: none; }

.impress-on-over1 .future {
  opacity: 1.0;
  cursor: pointer; }
